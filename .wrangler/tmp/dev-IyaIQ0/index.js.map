{
  "version": 3,
  "sources": ["../../../src/data/mathCurriculum.ts", "../../../worker/index.ts", "../../../node_modules/.pnpm/wrangler@4.37.0/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/.pnpm/wrangler@4.37.0/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-bYSbRa/middleware-insertion-facade.js", "../../../node_modules/.pnpm/wrangler@4.37.0/node_modules/wrangler/templates/middleware/common.ts", "../bundle-bYSbRa/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/ariotriguna/Projectkan/school-practice-tests/.wrangler/tmp/dev-IyaIQ0",
  "sourcesContent": ["export type Topic = {\n  id: string;\n  name: string;\n  subtopics: string[];\n};\n\nexport type Grade = {\n  id: string;\n  name: string;\n  description: string;\n  topics: Topic[];\n};\n\nexport const mathCurriculum: Record<string, Grade> = {\n  'grade-1': {\n    id: 'grade-1',\n    name: 'Grade 1 (Year 1)',\n    description: 'Introduction to basic mathematical concepts',\n    topics: [\n      {\n        id: 'number',\n        name: 'Number',\n        subtopics: [\n          'Count, read, and write numbers up to 100',\n          'Compare and order numbers up to 100',\n          'Addition and subtraction within 20',\n          'Introduction to multiplication (repeated addition)',\n          'Understanding halves and quarters (fractions)'\n        ]\n      },\n      {\n        id: 'geometry',\n        name: 'Geometry',\n        subtopics: [\n          'Recognize and name 2D and 3D shapes',\n          'Describe position and direction (left, right, up, down)'\n        ]\n      },\n      {\n        id: 'measurement',\n        name: 'Measurement',\n        subtopics: [\n          'Compare lengths, mass, and capacity using non-standard units',\n          'Tell the time to the hour and half-hour',\n          'Recognize coins and simple money addition'\n        ]\n      },\n      {\n        id: 'data-handling',\n        name: 'Data Handling',\n        subtopics: [\n          'Sort and classify objects',\n          'Use pictograms and simple tables'\n        ]\n      },\n      {\n        id: 'problem-solving',\n        name: 'Problem Solving',\n        subtopics: [\n          'Apply addition/subtraction in simple word problems'\n        ]\n      }\n    ]\n  },\n  'grade-2': {\n    id: 'grade-2',\n    name: 'Grade 2 (Year 2)',\n    description: 'Building on foundational math skills',\n    topics: [\n      {\n        id: 'number',\n        name: 'Number',\n        subtopics: [\n          'Count, read, and write numbers up to 1000',\n          'Addition and subtraction within 100',\n          'Multiplication and division facts (2, 5, 10)',\n          'Fractions: halves, quarters, and thirds'\n        ]\n      },\n      {\n        id: 'geometry',\n        name: 'Geometry',\n        subtopics: [\n          'Recognize and describe properties of 2D and 3D shapes',\n          'Identify lines of symmetry'\n        ]\n      },\n      {\n        id: 'measurement',\n        name: 'Measurement',\n        subtopics: [\n          'Use standard units: cm, m, g, kg, ml, l',\n          'Tell time to the quarter hour',\n          'Money: simple change calculations'\n        ]\n      },\n      {\n        id: 'data-handling',\n        name: 'Data Handling',\n        subtopics: [\n          'Collect and present data using tally charts and bar charts'\n        ]\n      },\n      {\n        id: 'problem-solving',\n        name: 'Problem Solving',\n        subtopics: [\n          'Multi-step word problems with addition and subtraction'\n        ]\n      }\n    ]\n  },\n  // Add more grades following the same pattern\n  // I'll add a few more grades as examples\n  'grade-3': {\n    id: 'grade-3',\n    name: 'Grade 3 (Year 3)',\n    description: 'Expanding mathematical understanding',\n    topics: [\n      {\n        id: 'number',\n        name: 'Number',\n        subtopics: [\n          'Numbers up to 10,000',\n          'Addition and subtraction with carrying/borrowing',\n          'Multiplication and division facts (up to 10 \u00D7 10)',\n          'Fractions: halves, thirds, quarters, tenths'\n        ]\n      },\n      {\n        id: 'geometry',\n        name: 'Geometry',\n        subtopics: [\n          'Identify angles (right, acute, obtuse)',\n          'Perimeter of simple shapes'\n        ]\n      },\n      {\n        id: 'measurement',\n        name: 'Measurement',\n        subtopics: [\n          'Time: to the nearest 5 minutes',\n          'Length, mass, capacity in metric units'\n        ]\n      },\n      {\n        id: 'data-handling',\n        name: 'Data Handling',\n        subtopics: [\n          'Interpret bar charts and tables'\n        ]\n      },\n      {\n        id: 'problem-solving',\n        name: 'Problem Solving',\n        subtopics: [\n          'Two-step problems in all four operations'\n        ]\n      }\n    ]\n  },\n  'grade-4': {\n    id: 'grade-4',\n    name: 'Grade 4 (Year 4)',\n    description: 'Developing more complex math skills',\n    topics: [\n      {\n        id: 'number',\n        name: 'Number',\n        subtopics: [\n          'Numbers up to 100,000',\n          'Formal written methods for addition/subtraction',\n          'Multiplication/division with larger numbers',\n          'Fractions and decimals (tenths, hundredths)'\n        ]\n      },\n      {\n        id: 'geometry',\n        name: 'Geometry',\n        subtopics: [\n          'Angles: measure and compare',\n          'Symmetry and reflection',\n          'Area and perimeter'\n        ]\n      },\n      {\n        id: 'measurement',\n        name: 'Measurement',\n        subtopics: [\n          'Convert units (cm to m, g to kg, ml to l)',\n          'Time: digital and analogue to the minute'\n        ]\n      },\n      {\n        id: 'data-handling',\n        name: 'Data Handling',\n        subtopics: [\n          'Line graphs and pictograms'\n        ]\n      },\n      {\n        id: 'problem-solving',\n        name: 'Problem Solving',\n        subtopics: [\n          'Apply number facts to real-life problems'\n        ]\n      }\n    ]\n  },\n  'grade-5': {\n    id: 'grade-5',\n    name: 'Grade 5 (Year 5)',\n    description: 'Advanced mathematical concepts and applications',\n    topics: [\n      {\n        id: 'number',\n        name: 'Number',\n        subtopics: [\n          'Numbers up to 1,000,000',\n          'Negative numbers in context',\n          'Multiplying and dividing by 10, 100, 1000',\n          'Fractions: equivalent fractions, addition, and subtraction',\n          'Decimals and percentages'\n        ]\n      },\n      {\n        id: 'geometry',\n        name: 'Geometry',\n        subtopics: [\n          'Properties of triangles and quadrilaterals',\n          'Coordinates (first quadrant)',\n          'Angle sums in polygons'\n        ]\n      },\n      {\n        id: 'measurement',\n        name: 'Measurement',\n        subtopics: [\n          'Area and perimeter of rectangles and compound shapes',\n          'Volume and capacity'\n        ]\n      },\n      {\n        id: 'data-handling',\n        name: 'Data Handling',\n        subtopics: [\n          'Interpret line graphs and simple pie charts'\n        ]\n      },\n      {\n        id: 'problem-solving',\n        name: 'Problem Solving',\n        subtopics: [\n          'Multi-step problems with mixed operations'\n        ]\n      }\n    ]\n  },\n  'grade-6': {\n    id: 'grade-6',\n    name: 'Grade 6 (Year 6)',\n    description: 'Mastery of primary mathematics concepts',\n    topics: [\n      {\n        id: 'number',\n        name: 'Number',\n        subtopics: [\n          'Numbers beyond 1,000,000',\n          'Prime numbers, factors, multiples',\n          'Ratio and proportion',\n          'Fractions: multiply/divide fractions',\n          'Decimals: 4 operations',\n          'Percentages and their equivalence with fractions/decimals'\n        ]\n      },\n      {\n        id: 'geometry',\n        name: 'Geometry',\n        subtopics: [\n          'Coordinates in four quadrants',\n          'Transformations: translation, reflection, rotation',\n          'Area of triangles and parallelograms'\n        ]\n      },\n      {\n        id: 'measurement',\n        name: 'Measurement',\n        subtopics: [\n          'Converting between units (metric)',\n          'Volume of cubes and cuboids'\n        ]\n      },\n      {\n        id: 'data-handling',\n        name: 'Data Handling',\n        subtopics: [\n          'Mean, median, mode, and range',\n          'Complex bar and line graphs'\n        ]\n      },\n      {\n        id: 'problem-solving',\n        name: 'Problem Solving',\n        subtopics: [\n          'Real-life problems involving percentages, ratio, and algebraic reasoning'\n        ]\n      }\n    ]\n  }\n};\n\nexport const getGrade = (gradeId: string) => {\n  return mathCurriculum[gradeId] || null;\n};\n\nexport const getAllGrades = () => {\n  return Object.values(mathCurriculum);\n};\n\n// helper untuk ambil random subtopic dari sebuah grade\nexport const getRandomSubtopic = (gradeId: string): string | null => {\n  const grade = mathCurriculum[gradeId];\n  if (!grade) return null;\n\n  // pilih topic random\n  const topic = grade.topics[Math.floor(Math.random() * grade.topics.length)];\n  if (!topic || topic.subtopics.length === 0) return null;\n\n  // pilih subtopic random\n  const subtopic = topic.subtopics[Math.floor(Math.random() * topic.subtopics.length)];\n  return subtopic;\n};\n\n", "import { mathCurriculum, getRandomSubtopic } from \"../src/data/mathCurriculum\";\n\nfunction withCORS(data: any, status = 200) {\n  return new Response(JSON.stringify(data), {\n    status,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",   // \u2705 izinkan semua origin\n      \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n      \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\n    },\n  });\n}\n\nexport default {\n  async fetch(req: Request, env: { DEEPSEEK_KEY: string }) {\n    const url = new URL(req.url);\n\n    // \u2705 Handle preflight (OPTIONS)\n    if (req.method === \"OPTIONS\") {\n      return new Response(null, {\n        status: 204,\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"GET,POST,OPTIONS\",\n          \"Access-Control-Allow-Headers\": \"Content-Type, Authorization\",\n        },\n      });\n    }\n\n    // ---------------- /api/chat ----------------\n    if (url.pathname.startsWith(\"/api/chat\") && req.method === \"POST\") {\n      const { message } = await req.json();\n\n      const res = await fetch(\"https://api.deepseek.com/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${env.DEEPSEEK_KEY}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          model: \"deepseek-chat\",\n          messages: [\n            {\n              role: \"system\",\n              content: `You are an educational assistant. \nYou must only answer questions about education (school, study tips, child learning, math, science, subjects, exam prep, saving for children's education).\nIf a user asks outside of education, politely decline and remind them you can only help with educational topics. \nKeep your tone friendly and simple.`,\n            },\n            { role: \"user\", content: message },\n          ],\n        }),\n      });\n\n      const data = await res.json();\n      return withCORS({\n        reply: data.choices?.[0]?.message?.content ?? \"\u26A0\uFE0F No reply\",\n      });\n    }\n\n    // ---------------- /api/question ----------------\n    if (url.pathname.startsWith(\"/api/question\") && req.method === \"POST\") {\n      const { grade } = await req.json();\n\n      const gradeId = `grade-${grade}`;\n      const gradeData = mathCurriculum[gradeId];\n      if (!gradeData) {\n        return withCORS({ questions: [] });\n      }\n\n      const subtopic = getRandomSubtopic(gradeId) || \"general math\";\n\n      const prompt = `\n      Generate 5 multiple-choice questions for ${gradeData.name} students\n      based on the Cambridge curriculum subtopic: \"${subtopic}\".\n\n      Rules:\n      - Strictly align with Cambridge curriculum.\n      - Provide 4 options (A\u2013D).\n      - Ensure one correctAnswer is included in the options.\n      - Add a short explanation (1\u20132 sentences).\n      - Return valid JSON only.\n\n      Format:\n      {\n        \"questions\": [\n          {\n            \"question\": \"Question text\",\n            \"options\": [\"Option A\", \"Option B\", \"Option C\", \"Option D\"],\n            \"correctAnswer\": \"Correct option text\",\n            \"explanation\": \"1\u20132 sentences explanation\",\n            \"topic\": \"${subtopic}\"\n          }\n        ]\n      }\n      `;\n\n      const res = await fetch(\"https://api.deepseek.com/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${env.DEEPSEEK_KEY}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          model: \"deepseek-chat\",\n          messages: [{ role: \"user\", content: prompt }],\n        }),\n      });\n\n      const data = await res.json();\n      const content = data.choices?.[0]?.message?.content ?? \"{}\";\n      let parsed = { questions: [] };\n      try {\n        parsed = JSON.parse(content.replace(/```json|```/g, \"\").trim());\n      } catch {}\n\n      return withCORS(\n        parsed.questions?.length\n          ? parsed\n          : {\n              questions: [\n                {\n                  question: \"2 + 3 = ?\",\n                  options: [\"4\", \"5\", \"6\", \"7\"],\n                  correctAnswer: \"5\",\n                  explanation: \"Adding 2 and 3 gives 5.\",\n                  topic: subtopic,\n                },\n              ],\n            }\n      );\n    }\n\n    // ---------------- /api/explain ----------------\n    if (url.pathname.startsWith(\"/api/explain\") && req.method === \"POST\") {\n      const { question, wrongAnswer, grade } = await req.json();\n\n      const prompt = `\n      A grade ${grade} student answered this incorrectly.\n      Question: ${question}\n      Wrong Answer: ${wrongAnswer}\n      Explain why it's wrong and give the correct step-by-step solution.\n      `;\n\n      const res = await fetch(\"https://api.deepseek.com/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Authorization\": `Bearer ${env.DEEPSEEK_KEY}`,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          model: \"deepseek-chat\",\n          messages: [{ role: \"user\", content: prompt }],\n          temperature: 0.6,\n        }),\n      });\n\n      const data = await res.json();\n      return withCORS({\n        explanation:\n          data.choices?.[0]?.message?.content ?? \"\u26A0\uFE0F No explanation\",\n      });\n    }\n\n    return withCORS({ error: \"Not Found\" }, 404);\n  },\n};\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/ariotriguna/Projectkan/school-practice-tests/worker/index.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/ariotriguna/Projectkan/school-practice-tests/node_modules/.pnpm/wrangler@4.37.0/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/ariotriguna/Projectkan/school-practice-tests/node_modules/.pnpm/wrangler@4.37.0/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/ariotriguna/Projectkan/school-practice-tests/worker/index.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/ariotriguna/Projectkan/school-practice-tests/.wrangler/tmp/bundle-bYSbRa/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/ariotriguna/Projectkan/school-practice-tests/node_modules/.pnpm/wrangler@4.37.0/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/ariotriguna/Projectkan/school-practice-tests/.wrangler/tmp/bundle-bYSbRa/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/ariotriguna/Projectkan/school-practice-tests/.wrangler/tmp/bundle-bYSbRa/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": ";;;;AAaO,IAAM,iBAAwC;AAAA,EACnD,WAAW;AAAA,IACT,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,IACbaAAa;AAAA,IACbaAAa;AAAA,IACb,QAAQ;AAAA,MACN;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,WAAW;AAAA,UACT;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,WAAW;AAAA,UACT;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,WAAW;AAAA,UACT;AAAA,UACA;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,WAAW;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,WAAW;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AAAA,EACA,WAAW;AAAA,IACT,IAAI;AAAA,IACJ,MAAM;AAAA,IACN,aAAa;AAAA,IACbaAAa;AAAA,IACbaAAa;AAAA,IACboBAAoB,wBAAC,YAAmC;AACnE,QAAM,QAAQ,eAAe,OAAO;AACpC,MAAI,CAAC,MAAO,QAAO;AAGnB,QAAM,QAAQ,MAAM,OAAO,KAAK,MAAM,KAAK,OAAO,IAAI,MAAM,OAAO,MAAM,CAAC;AAC1E,MAAI,CAAC,SAAS,MAAM,UAAU,WAAW,EAAG,QAAO;AAGnD,QAAM,WAAW,MAAM,UAAU,KAAK,MAAM,KAAK,OAAO,IAAI,MAAM,UAAU,MAAM,CAAC;AACnF,SAAO;AACT,GAXiC;;;AC9TjC,SAAS,SAAS,MAAW,SAAS,KAAK;AACzC,SAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAG;AAAA,IACxC;AAAA,IACA,SAAS;AAAA,MACP,gBAAgB;AAAA,MAChB,+BAA+B;AAAA;AAAA,MAC/B,gCAAgC;AAAA,MAChC,gCAAgC;AAAA,IAClC;AAAA,EACF,CAAC;AACH;AAVS;AAYT,IAAO,iBAAQ;AAAA,EACb,MAAM,MAAM,KAAc,KAA+B;AACvD,UAAM,MAAM,IAAI,IAAI,IAAI,GAAG;AAG3B,QAAI,IAAI,WAAW,WAAW;AAC5B,aAAO,IAAI,SAAS,MAAM;AAAA,QACxB,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,+BAA+B;AAAA,UAC/B,gCAAgC;AAAA,UAChC,gCAAgC;AAAA,QAClC;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,IAAI,SAAS,WAAW,WAAW,KAAK,IAAI,WAAW,QAAQ;AACjE,YAAM,EAAE,QAAQ,IAAI,MAAM,IAAI,KAAK;AAEnC,YAAM,MAAM,MAAM,MAAM,6CAA6C;AAAA,QACnE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,iBAAiB,UAAU,IAAI,YAAY;AAAA,UAC3C,gBAAgB;AAAA,QAClB;AAAA,QACA,MAAM,KAAK,UAAU;AAAA,UACnB,OAAO;AAAA,UACP,UAAU;AAAA,YACR;AAAA,cACE,MAAM;AAAA,cACN,SAAS;AAAA;AAAA;AAAA;AAAA,YAIX;AAAA,YACA,EAAE,MAAM,QAAQ,SAAS,QAAQ;AAAA,UACnC;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAED,YAAM,OAAO,MAAM,IAAI,KAAK;AAC5B,aAAO,SAAS;AAAA,QACd,OAAO,KAAK,UAAU,CAAC,GAAG,SAAS,WAAW;AAAA,MAChD,CAAC;AAAA,IACH;AAGA,QAAI,IAAI,SAAS,WAAW,eAAe,KAAK,IAAI,WAAW,QAAQ;AACrE,YAAM,EAAE,MAAM,IAAI,MAAM,IAAI,KAAK;AAEjC,YAAM,UAAU,SAAS,KAAK;AAC9B,YAAM,YAAY,eAAe,OAAO;AACxC,UAAI,CAAC,WAAW;AACd,eAAO,SAAS,EAAE,WAAW,CAAC,EAAE,CAAC;AAAA,MACnC;AAEA,YAAM,WAAW,kBAAkB,OAAO,KAAK;AAE/C,YAAM,SAAS;AAAA,iDAC4B,UAAU,IAAI;AAAA,qDACV,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAiBrC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAM1B,YAAM,MAAM,MAAM,MAAM,6CAA6C;AAAA,QACnE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,iBAAiB,UAAU,IAAI,YAAY;AAAA,UAC3C,gBAAgB;AAAA,QAClB;AAAA,QACA,MAAM,KAAK,UAAU;AAAA,UACnB,OAAO;AAAA,UACP,UAAU,CAAC,EAAE,MAAM,QAAQ,SAAS,OAAO,CAAC;AAAA,QAC9C,CAAC;AAAA,MACH,CAAC;AAED,YAAM,OAAO,MAAM,IAAI,KAAK;AAC5B,YAAM,UAAU,KAAK,UAAU,CAAC,GAAG,SAAS,WAAW;AACvD,UAAI,SAAS,EAAE,WAAW,CAAC,EAAE;AAC7B,UAAI;AACF,iBAAS,KAAK,MAAM,QAAQ,QAAQ,gBAAgB,EAAE,EAAE,KAAK,CAAC;AAAA,MAChE,QAAQ;AAAA,MAAC;AAET,aAAO;AAAA,QACL,OAAO,WAAW,SACd,SACA;AAAA,UACE,WAAW;AAAA,YACT;AAAA,cACE,UAAU;AAAA,cACV,SAAS,CAAC,KAAK,KAAK,KAAK,GAAG;AAAA,cAC5B,eAAe;AAAA,cACf,aAAa;AAAA,cACb,OAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAAA,MACN;AAAA,IACF;AAGA,QAAI,IAAI,SAAS,WAAW,cAAc,KAAK,IAAI,WAAW,QAAQ;AACpE,YAAM,EAAE,UAAU,aAAa,MAAM,IAAI,MAAM,IAAI,KAAK;AAExD,YAAM,SAAS;AAAA,gBACL,KAAK;AAAA,kBACH,QAAQ;AAAA,sBACJ,WAAW;AAAA;AAAA;AAI3B,YAAM,MAAM,MAAM,MAAM,6CAA6C;AAAA,QACnE,QAAQ;AAAA,QACR,SAAS;AAAA,UACP,iBAAiB,UAAU,IAAI,YAAY;AAAA,UAC3C,gBAAgB;AAAA,QAClB;AAAA,QACA,MAAM,KAAK,UAAU;AAAA,UACnB,OAAO;AAAA,UACP,UAAU,CAAC,EAAE,MAAM,QAAQ,SAAS,OAAO,CAAC;AAAA,UAC5C,aAAa;AAAA,QACf,CAAC;AAAA,MACH,CAAC;AAED,YAAM,OAAO,MAAM,IAAI,KAAK;AAC5B,aAAO,SAAS;AAAA,QACd,aACE,KAAK,UAAU,CAAC,GAAG,SAAS,WAAW;AAAA,MAC3C,CAAC;AAAA,IACH;AAEA,WAAO,SAAS,EAAE,OAAO,YAAY,GAAG,GAAG;AAAA,EAC7C;AACF;;;ACrKA,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,UAAE;AACD,QAAI;AACH,UAAI,QAAQ,SAAS,QAAQ,CAAC,QAAQ,UAAU;AAC/C,cAAM,SAAS,QAAQ,KAAK,UAAU;AACtC,eAAO,EAAE,MAAM,OAAO,KAAK,GAAG,MAAM;AAAA,QAAC;AAAA,MACtC;AAAA,IACD,SAAS,GAAG;AACX,cAAQ,MAAM,4CAA4C,CAAC;AAAA,IAC5D;AAAA,EACD;AACD,GAb8B;AAe9B,IAAO,6CAAQ;;;ACRf,SAAS,YAAY,GAAmB;AACvC,SAAO;AAAA,IACN,MAAM,GAAG;AAAA,IACT,SAAS,GAAG,WAAW,OAAO,CAAC;AAAA,IAC/B,OAAO,GAAG;AAAA,IACV,OAAO,GAAG,UAAU,SAAY,SAAY,YAAY,EAAE,KAAK;AAAA,EAChE;AACD;AAPS;AAUT,IAAM,YAAwB,8BAAO,SAAS,KAAK,MAAM,kBAAkB;AAC1E,MAAI;AACH,WAAO,MAAM,cAAc,KAAK,SAAS,GAAG;AAAA,EAC7C,SAAS,GAAQ;AAChB,UAAM,QAAQ,YAAY,CAAC;AAC3B,WAAO,SAAS,KAAK,OAAO;AAAA,MAC3B,QAAQ;AAAA,MACR,SAAS,EAAE,+BAA+B,OAAO;AAAA,IAClD,CAAC;AAAA,EACF;AACD,GAV8B;AAY9B,IAAO,2CAAQ;;;ACzBJ,IAAM,mCAAmC;AAAA,EAE9B;AAAA,EAAyB;AAC3C;AACA,IAAO,sCAAQ;;;ACcnB,IAAM,wBAAsC,CAAC;AAKtC,SAAS,uBAAuB,MAAqC;AAC3E,wBAAsB,KAAK,GAAG,KAAK,KAAK,CAAC;AAC1C;AAFgB;AAShB,SAAS,uBACR,SACA,KACA,KACA,UACA,iBACsB;AACtB,QAAM,CAAC,MAAM,GAAG,IAAI,IAAI;AACxB,QAAM,gBAAmC;AAAA,IACxC;AAAA,IACA,KAAK,YAAY,QAAQ;AACxB,aAAO,uBAAuB,YAAY,QAAQ,KAAK,UAAU,IAAI;AAAA,IACtE;AAAA,EACD;AACA,SAAO,KAAK,SAAS,KAAK,KAAK,aAAa;AAC7C;AAfS;AAiBF,SAAS,kBACf,SACA,KACA,KACA,UACA,iBACsB;AACtB,SAAO,uBAAuB,SAAS,KAAK,KAAK,UAAU;AAAA,IAC1D,GAAG;AAAA,IACH;AAAA,EACD,CAAC;AACF;AAXgB;;;AC3ChB,IAAM,iCAAN,MAAM,gCAA8D;AAAA,EAGnE,YACU,eACA,MACT,SACC;AAHQ;AACA;AAGT,SAAK,WAAW;AAAA,EACjB;AAAA,EArBD,OAYoE;AAAA;AAAA;AAAA,EAC1D;AAAA,EAUT,UAAU;AACT,QAAI,EAAE,gBAAgB,kCAAiC;AACtD,YAAM,IAAI,UAAU,oBAAoB;AAAA,IACzC;AAEA,SAAK,SAAS;AAAA,EACf;AACD;AAEA,SAAS,oBAAoB,QAA0C;AAEtE,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAEA,QAAM,kBAA+C,gCACpD,SACA,KACA,KACC;AACD,QAAI,OAAO,UAAU,QAAW;AAC/B,YAAM,IAAI,MAAM,6CAA6C;AAAA,IAC9D;AACA,WAAO,OAAO,MAAM,SAAS,KAAK,GAAG;AAAA,EACtC,GATqD;AAWrD,SAAO;AAAA,IACN,GAAG;AAAA,IACH,MAAM,SAAS,KAAK,KAAK;AACxB,YAAM,aAAyB,gCAAU,MAAM,MAAM;AACpD,YAAI,SAAS,eAAe,OAAO,cAAc,QAAW;AAC3D,gBAAM,aAAa,IAAI;AAAA,YACtB,KAAK,IAAI;AAAA,YACT,KAAK,QAAQ;AAAA,YACb,MAAM;AAAA,YAAC;AAAA,UACR;AACA,iBAAO,OAAO,UAAU,YAAY,KAAK,GAAG;AAAA,QAC7C;AAAA,MACD,GAT+B;AAU/B,aAAO,kBAAkB,SAAS,KAAK,KAAK,YAAY,eAAe;AAAA,IACxE;AAAA,EACD;AACD;AAxCS;AA0CT,SAAS,qBACR,OAC8B;AAE9B,MACC,qCAAqC,UACrC,iCAAiC,WAAW,GAC3C;AACD,WAAO;AAAA,EACR;AAEA,aAAW,cAAc,kCAAkC;AAC1D,wBAAoB,UAAU;AAAA,EAC/B;AAGA,SAAO,cAAc,MAAM;AAAA,IAC1B,mBAAyE,wBACxE,SACA,KACA,QACI;AACJ,WAAK,MAAM;AACX,WAAK,MAAM;AACX,UAAI,MAAM,UAAU,QAAW;AAC9B,cAAM,IAAI,MAAM,sDAAsD;AAAA,MACvE;AACA,aAAO,MAAM,MAAM,OAAO;AAAA,IAC3B,GAXyE;AAAA,IAazE,cAA0B,wBAAC,MAAM,SAAS;AACzC,UAAI,SAAS,eAAe,MAAM,cAAc,QAAW;AAC1D,cAAM,aAAa,IAAI;AAAA,UACtB,KAAK,IAAI;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,MAAM;AAAA,UAAC;AAAA,QACR;AACA,eAAO,MAAM,UAAU,UAAU;AAAA,MAClC;AAAA,IACD,GAT0B;AAAA,IAW1B,MAAM,SAAwD;AAC7D,aAAO;AAAA,QACN;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACN;AAAA,IACD;AAAA,EACD;AACD;AAnDS;AAqDT,IAAI;AACJ,IAAI,OAAO,wCAAU,UAAU;AAC9B,kBAAgB,oBAAoB,mCAAK;AAC1C,WAAW,OAAO,wCAAU,YAAY;AACvC,kBAAgB,qBAAqB,mCAAK;AAC3C;AACA,IAAO,kCAAQ;",
  "names": []
}
